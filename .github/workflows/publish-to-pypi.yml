name: Publish Python üêç distributions üì¶ to PyPI

on: push

jobs:
  build-code-mac:
    name: Build and publish Python üêç distributions üì¶ to PyPI and TestPyPI
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest]
        python-version: [3.7, 3.8, 3.9, "3.10"]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Anaconda Python ${{ matrix.python-version }}
      uses: s-weigand/setup-conda@v1
      with:
        python-version: ${{ matrix.python-version }}
        conda-channels: anaconda

    - name: Install dependencies
      run: |
        conda install numpy h5py
        python3 -m pip install --upgrade pip
        python3 -m pip install --upgrade setuptools wheel
        python3 -m pip install --upgrade twine

    - name: Build a binary wheel and a source tarball
      run: |
        sudo ln -s /usr/local/bin/gfortran-10 /usr/local/bin/gfortran
        sudo mkdir /usr/local/gfortran
        sudo ln -s /usr/local/Cellar/gcc@9/9.3.0_1/lib/gcc/9 /usr/local/gfortran/lib
        NPY_DISTUTILS_APPEND_FLAGS=1 python3 setup.py sdist bdist_wheel

    - name: Upload builds
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: dist

  build-code-linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install twine flake8

    - name: Build manylinux Python wheels
      uses: RalfG/python-wheels-manylinux-build@v0.5.0-manylinux2014_x86_64
      with:
        build-requirements: 'numpy'
        system-packages: 'hdf5 gcc-gfortran'
        package-path: './'
        pip-wheel-args: '--no-deps -w ./'

    - name: Upload builds
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: dist

  publish:
    needs: [build-code-mac, build-code-linux]
    name: Publish Python üêç distributions üì¶ to PyPI and TestPyPI
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [3.8]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade setuptools wheel
        pip install --upgrade twine

    - name: Download builds
      uses: actions/download-artifact@v3
      with:
          name: dist

    - name: Publish distribution üì¶ to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.pypi_password }}
